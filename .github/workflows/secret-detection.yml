name: Secret Detection and Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  secret-detection:
    runs-on: ubuntu-latest
    name: Detect Secrets in Code
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Install detect-secrets
      run: |
        pip install detect-secrets

    - name: Run detect-secrets scan
      run: |
        detect-secrets scan --all-files --baseline .secrets.baseline
        if [ $? -ne 0 ]; then
          echo "ðŸš¨ Secrets detected! Please remove them before committing."
          exit 1
        fi

    - name: Run custom secret validator
      run: |
        cd backend
        npm run validate:secrets

    - name: Check for .env files in commit
      run: |
        # Verificar se arquivos .env foram commitados (exceto .env.example)
        if git diff --name-only HEAD~1 HEAD | grep -E "\.env$|\.env\.local$|\.env\.production$"; then
          echo "ðŸš¨ ERROR: .env files should not be committed!"
          echo "Found .env files in commit:"
          git diff --name-only HEAD~1 HEAD | grep -E "\.env$|\.env\.local$|\.env\.production$"
          exit 1
        fi

    - name: Validate no hardcoded secrets
      run: |
        # Verificar padrÃµes especÃ­ficos do Genesis Luminal
        if grep -r "sk-ant-api03-" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "ðŸš¨ ERROR: Anthropic API key found in code!"
          exit 1
        fi
        
        if grep -r "AKIA[0-9A-Z]\{16\}" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "ðŸš¨ ERROR: AWS Access Key found in code!"
          exit 1
        fi

    - name: Install git-secrets
      run: |
        git clone https://github.com/awslabs/git-secrets.git
        cd git-secrets
        sudo make install

    - name: Configure git-secrets
      run: |
        git secrets --register-aws
        git secrets --install
        git secrets --add 'sk-ant-api03-[a-zA-Z0-9\-_]{95}[a-zA-Z0-9]'
        git secrets --add 'AKIA[0-9A-Z]{16}'
        git secrets --add '[0-9a-zA-Z/+]{40}'

    - name: Run git-secrets scan
      run: |
        git secrets --scan

    - name: Generate security report
      if: failure()
      run: |
        echo "ðŸ”’ SECURITY SCAN FAILED"
        echo "Please review and fix the security issues above."
        echo "Make sure no secrets are committed to the repository."
        echo ""
        echo "ðŸ’¡ Tips:"
        echo "- Use environment variables for secrets"
        echo "- Configure Secret Manager for production"
        echo "- Use .env.example for documentation"
        echo "- Never commit .env files"

  dependency-security:
    runs-on: ubuntu-latest
    name: Dependency Security Audit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Run npm audit
      run: |
        cd backend
        npm audit --audit-level high

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        command: test

    - name: Generate SBOM (Software Bill of Materials)
      run: |
        cd backend
        npm list --json > sbom.json
        
    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: software-bill-of-materials
        path: backend/sbom.json

  code-security-analysis:
    runs-on: ubuntu-latest
    name: Static Code Security Analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Run Semgrep
      uses: returntocorp/semgrep-action@v1
      with:
        config: auto
        generateSarif: "1"

    - name: Upload Semgrep results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: semgrep.sarif
