import type { EmotionalAnalysisRequest, EmotionalAnalysisResponse } from '../../../shared/types/api';
import { ProviderRouter } from '../providers/ProviderRouter';

class ClaudeService {
  private router = new ProviderRouter();

  async analyzeEmotionalState(input: EmotionalAnalysisRequest): Promise<EmotionalAnalysisResponse> {
    // Sanitização mínima
    const text = (input?.text ?? '').trim();
    if (!text) {
      return {
        intensity: 0.0,
        dominantAffect: 'neutral',
        timestamp: new Date().toISOString(),
        confidence: 0.0,
        recommendation: 'provide_input',
        emotionalShift: 'stable',
        morphogenicSuggestion: 'fibonacci',
      };
    }
    return this.router.analyze({ text });
  }

  status() {
    return this.router.getStatus();
  }
}

const claudeService = new ClaudeService();
export default claudeService;
